// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package br.edu.ufpb.nhrf.musicstreamer.web;

import br.edu.ufpb.nhrf.musicstreamer.domain.Album;
import br.edu.ufpb.nhrf.musicstreamer.service.api.AlbumService;
import br.edu.ufpb.nhrf.musicstreamer.web.AlbumsItemJsonController;
import io.springlets.web.NotFoundException;
import javax.validation.Valid;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder;
import org.springframework.web.util.UriComponents;

privileged aspect AlbumsItemJsonController_Roo_JSON {
    
    declare @type: AlbumsItemJsonController: @RestController;
    
    declare @type: AlbumsItemJsonController: @RequestMapping(value = "/api/albums/{album}", name = "AlbumsItemJsonController", produces = MediaType.APPLICATION_JSON_VALUE);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private AlbumService AlbumsItemJsonController.albumService;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param albumService
     */
    @Autowired
    public AlbumsItemJsonController.new(AlbumService albumService) {
        this.albumService = albumService;
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return AlbumService
     */
    public AlbumService AlbumsItemJsonController.getAlbumService() {
        return albumService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param albumService
     */
    public void AlbumsItemJsonController.setAlbumService(AlbumService albumService) {
        this.albumService = albumService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Album
     */
    @ModelAttribute
    public Album AlbumsItemJsonController.getAlbum(@PathVariable("album") Long id) {
        Album album = albumService.findOne(id);
        if (album == null) {
            throw new NotFoundException(String.format("Album with identifier '%s' not found",id));
        }
        return album;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param album
     * @return ResponseEntity
     */
    @GetMapping(name = "show")
    public ResponseEntity<?> AlbumsItemJsonController.show(@ModelAttribute Album album) {
        return ResponseEntity.ok(album);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param album
     * @return UriComponents
     */
    public static UriComponents AlbumsItemJsonController.showURI(Album album) {
        return MvcUriComponentsBuilder
            .fromMethodCall(
                MvcUriComponentsBuilder.on(AlbumsItemJsonController.class).show(album))
            .buildAndExpand(album.getId()).encode();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param storedAlbum
     * @param album
     * @param result
     * @return ResponseEntity
     */
    @PutMapping(name = "update")
    public ResponseEntity<?> AlbumsItemJsonController.update(@ModelAttribute Album storedAlbum, @Valid @RequestBody Album album, BindingResult result) {
        
        if (result.hasErrors()) {
            return ResponseEntity.status(HttpStatus.CONFLICT).body(result);
        }
        album.setId(storedAlbum.getId());
        getAlbumService().save(album);
        return ResponseEntity.ok().build();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param album
     * @return ResponseEntity
     */
    @DeleteMapping(name = "delete")
    public ResponseEntity<?> AlbumsItemJsonController.delete(@ModelAttribute Album album) {
        getAlbumService().delete(album);
        return ResponseEntity.ok().build();
    }
    
}
