// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package br.edu.ufpb.nhrf.musicstreamer.service.impl;

import br.edu.ufpb.nhrf.musicstreamer.domain.Album;
import br.edu.ufpb.nhrf.musicstreamer.domain.Artist;
import br.edu.ufpb.nhrf.musicstreamer.domain.Track;
import br.edu.ufpb.nhrf.musicstreamer.repository.TrackRepository;
import br.edu.ufpb.nhrf.musicstreamer.service.impl.TrackServiceImpl;
import io.springlets.data.domain.GlobalSearch;
import io.springlets.data.web.validation.MessageI18n;
import java.util.List;
import java.util.Map;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect TrackServiceImpl_Roo_Service_Impl {
    
    declare @type: TrackServiceImpl: @Service;
    
    declare @type: TrackServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private TrackRepository TrackServiceImpl.trackRepository;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param trackRepository
     */
    @Autowired
    public TrackServiceImpl.new(TrackRepository trackRepository) {
        setTrackRepository(trackRepository);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return TrackRepository
     */
    public TrackRepository TrackServiceImpl.getTrackRepository() {
        return trackRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param trackRepository
     */
    public void TrackServiceImpl.setTrackRepository(TrackRepository trackRepository) {
        this.trackRepository = trackRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param track
     * @return Map
     */
    public Map<String, List<MessageI18n>> TrackServiceImpl.validate(Track track) {
        Map<String, List<MessageI18n>> messages = new java.util.HashMap<String, List<MessageI18n>>();
        
        // TODO: IMPLEMENT HERE THE VALIDATION OF YOUR ENTITY
        
        return messages;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param track
     */
    @Transactional
    public void TrackServiceImpl.delete(Track track) {
        // Clear bidirectional many-to-one child relationship with Artist
        if (track.getArtist() != null) {
            track.getArtist().getTracks().remove(track);
        }
        
        // Clear bidirectional many-to-one child relationship with Album
        if (track.getAlbum() != null) {
            track.getAlbum().getTracks().remove(track);
        }
        
        getTrackRepository().delete(track);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<Track> TrackServiceImpl.save(Iterable<Track> entities) {
        return getTrackRepository().save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void TrackServiceImpl.delete(Iterable<Long> ids) {
        List<Track> toDelete = getTrackRepository().findAll(ids);
        getTrackRepository().deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return Track
     */
    @Transactional
    public Track TrackServiceImpl.save(Track entity) {
        return getTrackRepository().save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Track
     */
    public Track TrackServiceImpl.findOne(Long id) {
        return getTrackRepository().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Track
     */
    public Track TrackServiceImpl.findOneForUpdate(Long id) {
        return getTrackRepository().findOneDetached(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<Track> TrackServiceImpl.findAll(Iterable<Long> ids) {
        return getTrackRepository().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<Track> TrackServiceImpl.findAll() {
        return getTrackRepository().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long TrackServiceImpl.count() {
        return getTrackRepository().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Track> TrackServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getTrackRepository().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Track> TrackServiceImpl.findAllByIdsIn(List<Long> ids, GlobalSearch globalSearch, Pageable pageable) {
        return getTrackRepository().findAllByIdsIn(ids, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param album
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Track> TrackServiceImpl.findByAlbum(Album album, GlobalSearch globalSearch, Pageable pageable) {
        return getTrackRepository().findByAlbum(album, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param artist
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Track> TrackServiceImpl.findByArtist(Artist artist, GlobalSearch globalSearch, Pageable pageable) {
        return getTrackRepository().findByArtist(artist, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param album
     * @return Long
     */
    public long TrackServiceImpl.countByAlbum(Album album) {
        return getTrackRepository().countByAlbum(album);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param artist
     * @return Long
     */
    public long TrackServiceImpl.countByArtist(Artist artist) {
        return getTrackRepository().countByArtist(artist);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Track> TrackServiceImpl.getEntityType() {
        return Track.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> TrackServiceImpl.getIdType() {
        return Long.class;
    }
    
}
