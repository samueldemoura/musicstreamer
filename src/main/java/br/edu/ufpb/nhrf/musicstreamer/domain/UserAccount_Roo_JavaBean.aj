// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package br.edu.ufpb.nhrf.musicstreamer.domain;

import br.edu.ufpb.nhrf.musicstreamer.domain.UserAccount;
import java.util.Objects;

privileged aspect UserAccount_Roo_JavaBean {
    
    /**
     * Gets id value
     * 
     * @return Long
     */
    public Long UserAccount.getId() {
        return this.id;
    }
    
    /**
     * Sets id value
     * 
     * @param id
     * @return UserAccount
     */
    public UserAccount UserAccount.setId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * Gets version value
     * 
     * @return Integer
     */
    public Integer UserAccount.getVersion() {
        return this.version;
    }
    
    /**
     * Sets version value
     * 
     * @param version
     * @return UserAccount
     */
    public UserAccount UserAccount.setVersion(Integer version) {
        this.version = version;
        return this;
    }
    
    /**
     * Gets username value
     * 
     * @return String
     */
    public String UserAccount.getUsername() {
        return this.username;
    }
    
    /**
     * Sets username value
     * 
     * @param username
     * @return UserAccount
     */
    public UserAccount UserAccount.setUsername(String username) {
        this.username = username;
        return this;
    }
    
    /**
     * Gets email value
     * 
     * @return String
     */
    public String UserAccount.getEmail() {
        return this.email;
    }
    
    /**
     * Sets email value
     * 
     * @param email
     * @return UserAccount
     */
    public UserAccount UserAccount.setEmail(String email) {
        this.email = email;
        return this;
    }
    
    /**
     * Gets hash value
     * 
     * @return String
     */
    public String UserAccount.getHash() {
        return this.hash;
    }
    
    /**
     * Sets hash value
     * 
     * @param hash
     * @return UserAccount
     */
    public UserAccount UserAccount.setHash(String hash) {
        this.hash = hash;
        return this;
    }
    
    /**
     * Gets is_editor value
     * 
     * @return Boolean
     */
    public Boolean UserAccount.getIs_editor() {
        return this.is_editor;
    }
    
    /**
     * Sets is_editor value
     * 
     * @param is_editor
     * @return UserAccount
     */
    public UserAccount UserAccount.setIs_editor(Boolean is_editor) {
        this.is_editor = is_editor;
        return this;
    }
    
    /**
     * This `equals` implementation is specific for JPA entities and uses 
     * the entity identifier for it, following the article in 
     * https://vladmihalcea.com/2016/06/06/how-to-implement-equals-and-hashcode-using-the-jpa-entity-identifier/
     * 
     * @param obj
     * @return Boolean
     */
    public boolean UserAccount.equals(Object obj) {
        if (this == obj) {
            return true;
        }
        // instanceof is false if the instance is null
        if (!(obj instanceof UserAccount)) {
            return false;
        }
        return getId() != null && Objects.equals(getId(), ((UserAccount) obj).getId());
    }
    
    /**
     * This `hashCode` implementation is specific for JPA entities and uses a fixed `int` value to be able 
     * to identify the entity in collections after a new id is assigned to the entity, following the article in 
     * https://vladmihalcea.com/2016/06/06/how-to-implement-equals-and-hashcode-using-the-jpa-entity-identifier/
     * 
     * @return Integer
     */
    public int UserAccount.hashCode() {
        return 31;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return String
     */
    public String UserAccount.toString() {
        return "UserAccount {" + 
                "id='" + id + '\'' + 
                ", version='" + version + '\'' + 
                ", username='" + username + '\'' + 
                ", email='" + email + '\'' + 
                ", hash='" + hash + '\'' + 
                ", is_editor='" + is_editor + '\'' + "}" + super.toString();
    }
    
}
