// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package br.edu.ufpb.nhrf.musicstreamer.service.impl;

import br.edu.ufpb.nhrf.musicstreamer.domain.UserAccount;
import br.edu.ufpb.nhrf.musicstreamer.repository.UserAccountRepository;
import br.edu.ufpb.nhrf.musicstreamer.service.impl.UserAccountServiceImpl;
import io.springlets.data.domain.GlobalSearch;
import io.springlets.data.web.validation.MessageI18n;
import java.util.List;
import java.util.Map;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect UserAccountServiceImpl_Roo_Service_Impl {
    
    declare @type: UserAccountServiceImpl: @Service;
    
    declare @type: UserAccountServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private UserAccountRepository UserAccountServiceImpl.userAccountRepository;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param userAccountRepository
     */
    @Autowired
    public UserAccountServiceImpl.new(UserAccountRepository userAccountRepository) {
        setUserAccountRepository(userAccountRepository);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return UserAccountRepository
     */
    public UserAccountRepository UserAccountServiceImpl.getUserAccountRepository() {
        return userAccountRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param userAccountRepository
     */
    public void UserAccountServiceImpl.setUserAccountRepository(UserAccountRepository userAccountRepository) {
        this.userAccountRepository = userAccountRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param useraccount
     * @return Map
     */
    public Map<String, List<MessageI18n>> UserAccountServiceImpl.validate(UserAccount useraccount) {
        Map<String, List<MessageI18n>> messages = new java.util.HashMap<String, List<MessageI18n>>();
        
        // TODO: IMPLEMENT HERE THE VALIDATION OF YOUR ENTITY
        
        return messages;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param userAccount
     */
    @Transactional
    public void UserAccountServiceImpl.delete(UserAccount userAccount) {
        getUserAccountRepository().delete(userAccount);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<UserAccount> UserAccountServiceImpl.save(Iterable<UserAccount> entities) {
        return getUserAccountRepository().save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void UserAccountServiceImpl.delete(Iterable<Long> ids) {
        List<UserAccount> toDelete = getUserAccountRepository().findAll(ids);
        getUserAccountRepository().deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return UserAccount
     */
    @Transactional
    public UserAccount UserAccountServiceImpl.save(UserAccount entity) {
        return getUserAccountRepository().save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return UserAccount
     */
    public UserAccount UserAccountServiceImpl.findOne(Long id) {
        return getUserAccountRepository().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return UserAccount
     */
    public UserAccount UserAccountServiceImpl.findOneForUpdate(Long id) {
        return getUserAccountRepository().findOneDetached(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<UserAccount> UserAccountServiceImpl.findAll(Iterable<Long> ids) {
        return getUserAccountRepository().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<UserAccount> UserAccountServiceImpl.findAll() {
        return getUserAccountRepository().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long UserAccountServiceImpl.count() {
        return getUserAccountRepository().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<UserAccount> UserAccountServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getUserAccountRepository().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<UserAccount> UserAccountServiceImpl.findAllByIdsIn(List<Long> ids, GlobalSearch globalSearch, Pageable pageable) {
        return getUserAccountRepository().findAllByIdsIn(ids, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<UserAccount> UserAccountServiceImpl.getEntityType() {
        return UserAccount.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> UserAccountServiceImpl.getIdType() {
        return Long.class;
    }
    
}
