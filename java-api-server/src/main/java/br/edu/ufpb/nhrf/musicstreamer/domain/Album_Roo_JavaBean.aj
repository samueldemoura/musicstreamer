// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package br.edu.ufpb.nhrf.musicstreamer.domain;

import br.edu.ufpb.nhrf.musicstreamer.domain.Album;
import br.edu.ufpb.nhrf.musicstreamer.domain.Track;
import java.util.List;
import java.util.Objects;

privileged aspect Album_Roo_JavaBean {
    
    /**
     * Gets id value
     * 
     * @return Long
     */
    public Long Album.getId() {
        return this.id;
    }
    
    /**
     * Sets id value
     * 
     * @param id
     * @return Album
     */
    public Album Album.setId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * Gets version value
     * 
     * @return Integer
     */
    public Integer Album.getVersion() {
        return this.version;
    }
    
    /**
     * Sets version value
     * 
     * @param version
     * @return Album
     */
    public Album Album.setVersion(Integer version) {
        this.version = version;
        return this;
    }
    
    /**
     * Gets title value
     * 
     * @return String
     */
    public String Album.getTitle() {
        return this.title;
    }
    
    /**
     * Sets title value
     * 
     * @param title
     * @return Album
     */
    public Album Album.setTitle(String title) {
        this.title = title;
        return this;
    }
    
    /**
     * Gets tracks value
     * 
     * @return List
     */
    public List<Track> Album.getTracks() {
        return this.tracks;
    }
    
    /**
     * Sets tracks value
     * 
     * @param tracks
     * @return Album
     */
    public Album Album.setTracks(List<Track> tracks) {
        this.tracks = tracks;
        return this;
    }
    
    /**
     * Gets thumbnail value
     * 
     * @return String
     */
    public String Album.getThumbnail() {
        return this.thumbnail;
    }
    
    /**
     * Sets thumbnail value
     * 
     * @param thumbnail
     * @return Album
     */
    public Album Album.setThumbnail(String thumbnail) {
        this.thumbnail = thumbnail;
        return this;
    }
    
    /**
     * Gets description value
     * 
     * @return String
     */
    public String Album.getDescription() {
        return this.description;
    }
    
    /**
     * Sets description value
     * 
     * @param description
     * @return Album
     */
    public Album Album.setDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * This `equals` implementation is specific for JPA entities and uses 
     * the entity identifier for it, following the article in 
     * https://vladmihalcea.com/2016/06/06/how-to-implement-equals-and-hashcode-using-the-jpa-entity-identifier/
     * 
     * @param obj
     * @return Boolean
     */
    public boolean Album.equals(Object obj) {
        if (this == obj) {
            return true;
        }
        // instanceof is false if the instance is null
        if (!(obj instanceof Album)) {
            return false;
        }
        return getId() != null && Objects.equals(getId(), ((Album) obj).getId());
    }
    
    /**
     * This `hashCode` implementation is specific for JPA entities and uses a fixed `int` value to be able 
     * to identify the entity in collections after a new id is assigned to the entity, following the article in 
     * https://vladmihalcea.com/2016/06/06/how-to-implement-equals-and-hashcode-using-the-jpa-entity-identifier/
     * 
     * @return Integer
     */
    public int Album.hashCode() {
        return 31;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return String
     */
    public String Album.toString() {
        return "Album {" + 
                "id='" + id + '\'' + 
                ", version='" + version + '\'' + 
                ", title='" + title + '\'' + 
                ", thumbnail='" + thumbnail + '\'' + 
                ", description='" + description + '\'' + "}" + super.toString();
    }
    
}
